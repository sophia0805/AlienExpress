{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {}\nexport class APIError extends OpenAIError {\n  constructor(status, error, message, headers) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.request_id = headers?.['x-request-id'];\n    this.error = error;\n    const data = error;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n  static makeMessage(status, error, message) {\n    const msg = error?.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status || !headers) {\n      return new APIConnectionError({\n        message,\n        cause: castToError(errorResponse)\n      });\n    }\n    const error = errorResponse?.['error'];\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexport class APIUserAbortError extends APIError {\n  constructor({\n    message\n  } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\nexport class APIConnectionError extends APIError {\n  constructor({\n    message,\n    cause\n  }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({\n    message\n  } = {}) {\n    super({\n      message: message ?? 'Request timed out.'\n    });\n  }\n}\nexport class BadRequestError extends APIError {}\nexport class AuthenticationError extends APIError {}\nexport class PermissionDeniedError extends APIError {}\nexport class NotFoundError extends APIError {}\nexport class ConflictError extends APIError {}\nexport class UnprocessableEntityError extends APIError {}\nexport class RateLimitError extends APIError {}\nexport class InternalServerError extends APIError {}\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}","map":{"version":3,"names":["castToError","OpenAIError","Error","APIError","constructor","status","error","message","headers","makeMessage","request_id","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError"],"sources":["src/error.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}