{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage } from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.runs = new RunsAPI.Runs(this._client);\n    this.messages = new MessagesAPI.Messages(this._client);\n  }\n  create(body = {}, options) {\n    if (isRequestOptions(body)) {\n      return this.create({}, body);\n    }\n    return this._client.post('/threads', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a thread.\n   */\n  retrieve(threadId, options) {\n    return this._client.get(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a thread.\n   */\n  update(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a thread.\n   */\n  del(threadId, options) {\n    return this._client.delete(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  createAndRun(body, options) {\n    return this._client.post('/threads/runs', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      },\n      stream: body.stream ?? false\n    });\n  }\n  /**\n   * A helper to create a thread, start a run and then poll for a terminal state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndRunPoll(body, options) {\n    const run = await this.createAndRun(body, options);\n    return await this.runs.poll(run.thread_id, run.id, options);\n  }\n  /**\n   * Create a thread and stream the run back\n   */\n  createAndRunStream(body, options) {\n    return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n  }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;","map":{"version":3,"names":["APIResource","isRequestOptions","AssistantStream","MessagesAPI","Messages","MessagesPage","RunsAPI","Runs","RunsPage","Threads","constructor","runs","_client","messages","create","body","options","post","headers","retrieve","threadId","get","update","del","delete","createAndRun","stream","createAndRunPoll","run","poll","thread_id","id","createAndRunStream","createThreadAssistantStream","beta","threads"],"sources":["../../../src/resources/beta/threads/threads.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}