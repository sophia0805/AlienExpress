{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.steps = new StepsAPI.Steps(this._client);\n  }\n  create(threadId, params, options) {\n    const {\n      include,\n      ...body\n    } = params;\n    return this._client.post(`/threads/${threadId}/runs`, {\n      query: {\n        include\n      },\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      },\n      stream: params.stream ?? false\n    });\n  }\n  /**\n   * Retrieves a run.\n   */\n  retrieve(threadId, runId, options) {\n    return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a run.\n   */\n  update(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Cancels a run that is `in_progress`.\n   */\n  cancel(threadId, runId, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * A helper to create a run an poll for a terminal state. More information on Run\n   * lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndPoll(threadId, body, options) {\n    const run = await this.create(threadId, body, options);\n    return await this.poll(threadId, run.id, options);\n  }\n  /**\n   * Create a Run stream\n   *\n   * @deprecated use `stream` instead\n   */\n  createAndStream(threadId, body, options) {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n  /**\n   * A helper to poll a run status until it reaches a terminal state. More\n   * information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async poll(threadId, runId, options) {\n    const headers = {\n      ...options?.headers,\n      'X-Stainless-Poll-Helper': 'true'\n    };\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n    while (true) {\n      const {\n        data: run,\n        response\n      } = await this.retrieve(threadId, runId, {\n        ...options,\n        headers: {\n          ...options?.headers,\n          ...headers\n        }\n      }).withResponse();\n      switch (run.status) {\n        //If we are in any sort of intermediate state we poll\n        case 'queued':\n        case 'in_progress':\n        case 'cancelling':\n          let sleepInterval = 5000;\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        //We return the run in any terminal state.\n        case 'requires_action':\n        case 'incomplete':\n        case 'cancelled':\n        case 'completed':\n        case 'failed':\n        case 'expired':\n          return run;\n      }\n    }\n  }\n  /**\n   * Create a Run stream\n   */\n  stream(threadId, body, options) {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n  submitToolOutputs(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      },\n      stream: body.stream ?? false\n    });\n  }\n  /**\n   * A helper to submit a tool output to a run and poll for a terminal run state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async submitToolOutputsAndPoll(threadId, runId, body, options) {\n    const run = await this.submitToolOutputs(threadId, runId, body, options);\n    return await this.poll(threadId, run.id, options);\n  }\n  /**\n   * Submit the tool outputs from a previous run and stream the run to a terminal\n   * state. More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  submitToolOutputsStream(threadId, runId, body, options) {\n    return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n  }\n}\nexport class RunsPage extends CursorPage {}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;","map":{"version":3,"names":["APIResource","isRequestOptions","AssistantStream","sleep","StepsAPI","RunStepsPage","Steps","CursorPage","Runs","constructor","steps","_client","create","threadId","params","options","include","body","post","query","headers","stream","retrieve","runId","get","update","list","getAPIList","RunsPage","cancel","createAndPoll","run","poll","id","createAndStream","createAssistantStream","beta","threads","runs","pollIntervalMs","toString","data","response","withResponse","status","sleepInterval","headerInterval","headerIntervalMs","parseInt","isNaN","submitToolOutputs","submitToolOutputsAndPoll","submitToolOutputsStream","createToolAssistantStream"],"sources":["../../../../src/resources/beta/threads/runs/runs.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}