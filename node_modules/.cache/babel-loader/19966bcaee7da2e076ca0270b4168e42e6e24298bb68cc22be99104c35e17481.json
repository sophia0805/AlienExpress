{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.parts = new PartsAPI.Parts(this._client);\n  }\n  /**\n   * Creates an intermediate\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n   * that you can add\n   * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n   * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n   * after you create it.\n   *\n   * Once you complete the Upload, we will create a\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * contains all the parts you uploaded. This File is usable in the rest of our\n   * platform as a regular File object.\n   *\n   * For certain `purpose`s, the correct `mime_type` must be specified. Please refer\n   * to documentation for the supported MIME types for your use case:\n   *\n   * - [Assistants](https://platform.openai.com/docs/assistants/tools/file-search#supported-files)\n   *\n   * For guidance on the proper filename extensions for each purpose, please follow\n   * the documentation on\n   * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n   */\n  create(body, options) {\n    return this._client.post('/uploads', {\n      body,\n      ...options\n    });\n  }\n  /**\n   * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n   */\n  cancel(uploadId, options) {\n    return this._client.post(`/uploads/${uploadId}/cancel`, options);\n  }\n  /**\n   * Completes the\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n   *\n   * Within the returned Upload object, there is a nested\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * is ready to use in the rest of the platform.\n   *\n   * You can specify the order of the Parts by passing in an ordered list of the Part\n   * IDs.\n   *\n   * The number of bytes uploaded upon completion must match the number of bytes\n   * initially specified when creating the Upload object. No Parts may be added after\n   * an Upload is completed.\n   */\n  complete(uploadId, body, options) {\n    return this._client.post(`/uploads/${uploadId}/complete`, {\n      body,\n      ...options\n    });\n  }\n}\nUploads.Parts = Parts;","map":{"version":3,"names":["APIResource","PartsAPI","Parts","Uploads","constructor","parts","_client","create","body","options","post","cancel","uploadId","complete"],"sources":["../../src/resources/uploads/uploads.ts"],"sourcesContent":[null],"mappings":"AAAA;SAESA,WAAW,QAAE;OAGf,KAAKC,QAAQ;SACOC,KAAK,QAAc;AAE9C,OAAM,MAAOC,OAAQ,SAAQH,WAAW;EAAxCI,YAAA;;IACE,KAAAC,KAAK,GAAmB,IAAIJ,QAAQ,CAACC,KAAK,CAAC,IAAI,CAACI,OAAO,CAAC;EAyD1D;EAvDE;;;;;;;;;;;;;;;;;;;;;;EAsBAC,MAAMA,CAACC,IAAwB,EAAEC,OAA6B;IAC5D,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,UAAU,EAAE;MAAEF,IAAI;MAAE,GAAGC;IAAO,CAAE,CAAC;EAC5D;EAEA;;;EAGAE,MAAMA,CAACC,QAAgB,EAAEH,OAA6B;IACpD,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,YAAYE,QAAQ,SAAS,EAAEH,OAAO,CAAC;EAClE;EAEA;;;;;;;;;;;;;;;EAeAI,QAAQA,CACND,QAAgB,EAChBJ,IAA0B,EAC1BC,OAA6B;IAE7B,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,YAAYE,QAAQ,WAAW,EAAE;MAAEJ,IAAI;MAAE,GAAGC;IAAO,CAAE,CAAC;EACjF;;AAgGFN,OAAO,CAACD,KAAK,GAAGA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}